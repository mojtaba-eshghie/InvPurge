[
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "spender != 0",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "ori(Sum(_allowances[msg.sender][...])) one of [0,115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(_balances[...])) == 4000000000000000000000000000",
            "ori(Sum(_balances[...])) one of [4000000000000000000000000000]",
            "ori(_allowances[msg.sender][spender]) == 0",
            "ori(_allowances[msg.sender][spender]) one of [0]",
            "msg.sender != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "value > 0",
            "value == 115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "value one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 4000000000000000000000000000",
            "ori(_totalSupply) one of [4000000000000000000000000000]",
            "spender != msg.sender",
            "ori(Sum(_allowances[msg.sender][...])) >= ori(_allowances[msg.sender][spender])",
            "ori(Sum(_allowances[msg.sender][...])) <= value",
            "ori(_allowances[msg.sender][spender]) <= value",
            "ori(_allowances[msg.sender][spender]) < value",
            "ori(_allowances[msg.sender][spender]) != value"
        ],
        "postconditions": [
            "elem of _allowances[msg.sender][...] is one of [231584178474632390847141970017375815706539969331281128078915168015826259279870]",
            "elem of _allowances[msg.sender][...] is one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "Sum(_allowances[msg.sender][...]) > 0",
            "Sum(_allowances[msg.sender][...]) one of [231584178474632390847141970017375815706539969331281128078915168015826259279870,115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "elem of _balances[...] is one of [4000000000000000000000000000]",
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "_allowances[msg.sender][spender] > 0",
            "_allowances[msg.sender][spender] == 115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "_allowances[msg.sender][spender] one of [115792089237316195423570985008687907853269984665640564039457584007913129639935]",
            "Sum(_balances[...]) > 0",
            "Sum(_balances[...]) == 4000000000000000000000000000",
            "Sum(_balances[...]) one of [4000000000000000000000000000]",
            "_totalSupply > 0",
            "_totalSupply == 4000000000000000000000000000",
            "_totalSupply one of [4000000000000000000000000000]",
            "ori(_decimals) == _decimals",
            "ori(_decimals) >= _decimals",
            "ori(_decimals) <= _decimals",
            "Sum(_allowances[msg.sender][...]) >= ori(Sum(_allowances[msg.sender][...]))",
            "Sum(_allowances[msg.sender][...]) > ori(Sum(_allowances[msg.sender][...]))",
            "Sum(_allowances[msg.sender][...]) != ori(Sum(_allowances[msg.sender][...]))",
            "Sum(_allowances[msg.sender][...]) >= ori(_allowances[msg.sender][spender])",
            "Sum(_allowances[msg.sender][...]) > ori(_allowances[msg.sender][spender])",
            "Sum(_allowances[msg.sender][...]) != ori(_allowances[msg.sender][spender])",
            "Sum(_allowances[msg.sender][...]) >= value",
            "Sum(_allowances[msg.sender][...]) >= _allowances[msg.sender][spender]",
            "ori(Sum(_allowances[msg.sender][...])) <= _allowances[msg.sender][spender]",
            "ori(Sum(_balances[...])) == Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= Sum(_balances[...])",
            "ori(Sum(_balances[...])) <= Sum(_balances[...])",
            "ori(_allowances[msg.sender][spender]) <= _allowances[msg.sender][spender]",
            "ori(_allowances[msg.sender][spender]) < _allowances[msg.sender][spender]",
            "ori(_allowances[msg.sender][spender]) != _allowances[msg.sender][spender]",
            "value == _allowances[msg.sender][spender]",
            "value >= _allowances[msg.sender][spender]",
            "value <= _allowances[msg.sender][spender]",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(sender,recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(sender,recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(_balances[...])) == 4000000000000000000000000000",
            "ori(Sum(_balances[...])) one of [4000000000000000000000000000]",
            "msg.sender != 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(_balances[msg.sender]) > 0",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 4000000000000000000000000000",
            "ori(_totalSupply) one of [4000000000000000000000000000]",
            "recipient != 0",
            "amount > 0",
            "ori(Sum(_balances[...])) >= ori(_balances[msg.sender])",
            "ori(Sum(_balances[...])) >= ori(_balances[recipient])",
            "ori(Sum(_balances[...])) > ori(_balances[recipient])",
            "ori(Sum(_balances[...])) != ori(_balances[recipient])"
        ],
        "postconditions": [
            "_balances[recipient] > 0",
            "elem of _balances[...] is one of [4000000000000000000000000000]",
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "Sum(_balances[...]) > 0",
            "Sum(_balances[...]) == 4000000000000000000000000000",
            "Sum(_balances[...]) one of [4000000000000000000000000000]",
            "_totalSupply > 0",
            "_totalSupply == 4000000000000000000000000000",
            "_totalSupply one of [4000000000000000000000000000]",
            "ori(_decimals) == _decimals",
            "ori(_decimals) >= _decimals",
            "ori(_decimals) <= _decimals",
            "_balances[recipient] <= ori(Sum(_balances[...]))",
            "_balances[recipient] < ori(Sum(_balances[...]))",
            "_balances[recipient] != ori(Sum(_balances[...]))",
            "_balances[recipient] >= ori(_balances[recipient])",
            "_balances[recipient] <= Sum(_balances[...])",
            "_balances[recipient] < Sum(_balances[...])",
            "_balances[recipient] != Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= _balances[msg.sender]",
            "ori(Sum(_balances[...])) > _balances[msg.sender]",
            "ori(Sum(_balances[...])) != _balances[msg.sender]",
            "ori(Sum(_balances[...])) == Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= Sum(_balances[...])",
            "ori(Sum(_balances[...])) <= Sum(_balances[...])",
            "_balances[msg.sender] <= ori(_balances[msg.sender])",
            "_balances[msg.sender] <= Sum(_balances[...])",
            "_balances[msg.sender] < Sum(_balances[...])",
            "_balances[msg.sender] != Sum(_balances[...])",
            "ori(_balances[msg.sender]) <= Sum(_balances[...])",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply",
            "ori(_balances[recipient]) <= Sum(_balances[...])",
            "ori(_balances[recipient]) < Sum(_balances[...])",
            "ori(_balances[recipient]) != Sum(_balances[...])"
        ],
        "falsified_preconditions": [
            "ori(_balances[recipient]) == 0",
            "msg.sender != recipient",
            "ori(_balances[msg.sender]) >= ori(_balances[recipient])",
            "ori(_balances[msg.sender]) > ori(_balances[recipient])",
            "ori(_balances[msg.sender]) != ori(_balances[recipient])"
        ],
        "falsified_postconditions": [
            "_balances[msg.sender] > 0",
            "_balances[recipient] <= _balances[msg.sender]",
            "_balances[recipient] < _balances[msg.sender]",
            "_balances[recipient] != _balances[msg.sender]",
            "_balances[recipient] <= ori(_balances[msg.sender])",
            "_balances[recipient] < ori(_balances[msg.sender])",
            "_balances[recipient] != ori(_balances[msg.sender])",
            "_balances[recipient] > ori(_balances[recipient])",
            "_balances[recipient] != ori(_balances[recipient])",
            "_balances[msg.sender] < ori(_balances[msg.sender])",
            "_balances[msg.sender] != ori(_balances[msg.sender])",
            "_balances[msg.sender] >= ori(_balances[recipient])",
            "_balances[msg.sender] > ori(_balances[recipient])",
            "_balances[msg.sender] != ori(_balances[recipient])"
        ]
    },
    {
        "func": "transfer(recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(_balances[...])) == 4000000000000000000000000000",
            "ori(Sum(_balances[...])) one of [4000000000000000000000000000]",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 4000000000000000000000000000",
            "ori(_totalSupply) one of [4000000000000000000000000000]",
            "ori(Sum(_balances[...])) == ori(_totalSupply)",
            "ori(Sum(_balances[...])) >= ori(_totalSupply)",
            "ori(Sum(_balances[...])) <= ori(_totalSupply)"
        ],
        "postconditions": [
            "elem of _balances[...] is one of [4000000000000000000000000000]",
            "Sum(_balances[...]) > 0",
            "Sum(_balances[...]) == 4000000000000000000000000000",
            "Sum(_balances[...]) one of [4000000000000000000000000000]",
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "_totalSupply > 0",
            "_totalSupply == 4000000000000000000000000000",
            "_totalSupply one of [4000000000000000000000000000]",
            "ori(Sum(_balances[...])) == Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= Sum(_balances[...])",
            "ori(Sum(_balances[...])) <= Sum(_balances[...])",
            "ori(Sum(_balances[...])) == _totalSupply",
            "ori(Sum(_balances[...])) >= _totalSupply",
            "ori(Sum(_balances[...])) <= _totalSupply",
            "ori(_decimals) == _decimals",
            "ori(_decimals) >= _decimals",
            "ori(_decimals) <= _decimals",
            "Sum(_balances[...]) == ori(_totalSupply)",
            "Sum(_balances[...]) >= ori(_totalSupply)",
            "Sum(_balances[...]) <= ori(_totalSupply)",
            "Sum(_balances[...]) == _totalSupply",
            "Sum(_balances[...]) >= _totalSupply",
            "Sum(_balances[...]) <= _totalSupply",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]