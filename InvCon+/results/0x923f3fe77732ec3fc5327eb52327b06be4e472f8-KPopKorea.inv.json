[
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "collectFrom(addresses,amounts,recipient)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "collectFrom(addresses,amounts,recipient)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(sender,recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(sender,recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseAllowance(spender,addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unpause()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unpause()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "claimOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "claimOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "pause()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "pause()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(account,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(account,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseAllowance(spender,subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "msg.sender != 0",
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 3000000000000000000000000000",
            "ori(_totalSupply) one of [3000000000000000000000000000]",
            "ori(_balances[msg.sender]) > 0",
            "ori(_pendingowner) == 0",
            "ori(paused) == false",
            "ori(_owner) != 0",
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(_balances[...])) == 3000000000000000000000000000",
            "ori(Sum(_balances[...])) one of [3000000000000000000000000000]",
            "recipient != 0",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(Sum(_locked_balances[...])) == 0",
            "ori(Sum(_locked_balances[...])) one of [0]",
            "amount > 0",
            "ori(_balances[msg.sender]) <= ori(Sum(_balances[...]))",
            "ori(Sum(_balances[...])) >= ori(_balances[recipient])",
            "ori(Sum(_balances[...])) > ori(_balances[recipient])",
            "ori(Sum(_balances[...])) != ori(_balances[recipient])"
        ],
        "postconditions": [
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "Sum(_locked_balances[...]) == 0",
            "Sum(_locked_balances[...]) one of [0]",
            "_pendingowner == 0",
            "Sum(_balances[...]) > 0",
            "Sum(_balances[...]) == 3000000000000000000000000000",
            "Sum(_balances[...]) one of [3000000000000000000000000000]",
            "elem of _balances[...] is one of [3000000000000000000000000000]",
            "paused == false",
            "_owner != 0",
            "elem of _locked_balances[...] is one of [0]",
            "elem of _locked_balances[...] is one of []",
            "_balances[recipient] > 0",
            "_totalSupply > 0",
            "_totalSupply == 3000000000000000000000000000",
            "_totalSupply one of [3000000000000000000000000000]",
            "_decimals == ori(_decimals)",
            "_decimals >= ori(_decimals)",
            "_decimals <= ori(_decimals)",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply",
            "Sum(_locked_balances[...]) == ori(Sum(_locked_balances[...]))",
            "Sum(_locked_balances[...]) >= ori(Sum(_locked_balances[...]))",
            "Sum(_locked_balances[...]) <= ori(Sum(_locked_balances[...]))",
            "ori(_balances[msg.sender]) <= Sum(_balances[...])",
            "ori(_balances[msg.sender]) >= _balances[msg.sender]",
            "ori(_pendingowner) == _pendingowner",
            "ori(paused) == paused",
            "ori(_owner) == _owner",
            "ori(Sum(_balances[...])) == Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= Sum(_balances[...])",
            "ori(Sum(_balances[...])) <= Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= _balances[msg.sender]",
            "ori(Sum(_balances[...])) > _balances[msg.sender]",
            "ori(Sum(_balances[...])) != _balances[msg.sender]",
            "ori(Sum(_balances[...])) >= _balances[recipient]",
            "Sum(_balances[...]) >= _balances[msg.sender]",
            "Sum(_balances[...]) > _balances[msg.sender]",
            "Sum(_balances[...]) != _balances[msg.sender]",
            "Sum(_balances[...]) >= ori(_balances[recipient])",
            "Sum(_balances[...]) > ori(_balances[recipient])",
            "Sum(_balances[...]) != ori(_balances[recipient])",
            "Sum(_balances[...]) >= _balances[recipient]",
            "ori(_balances[recipient]) <= _balances[recipient]"
        ],
        "falsified_preconditions": [
            "ori(_balances[msg.sender]) >= ori(_balances[recipient])"
        ],
        "falsified_postconditions": [
            "ori(_balances[msg.sender]) >= _balances[recipient]",
            "_balances[msg.sender] >= ori(_balances[recipient])"
        ]
    },
    {
        "func": "transfer(recipient,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "collectFromLocked(addresses,amounts,recipient)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "collectFromLocked(addresses,amounts,recipient)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "lockTokenWhole(addresses)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "lockTokenWhole(addresses)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unlockToken(addresses,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unlockToken(addresses,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "lockToken(addresses,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "lockToken(addresses,amounts)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_totalSupply) > 0",
            "ori(_totalSupply) == 3000000000000000000000000000",
            "ori(_totalSupply) one of [3000000000000000000000000000]",
            "ori(_pendingowner) == 0",
            "ori(paused) == false",
            "ori(_owner) != 0",
            "ori(Sum(_balances[...])) > 0",
            "ori(Sum(_balances[...])) == 3000000000000000000000000000",
            "ori(Sum(_balances[...])) one of [3000000000000000000000000000]",
            "ori(_decimals) > 0",
            "ori(_decimals) == 18",
            "ori(_decimals) one of [18]",
            "ori(Sum(_locked_balances[...])) == 0",
            "ori(Sum(_locked_balances[...])) one of [0]",
            "ori(_totalSupply) == ori(Sum(_balances[...]))",
            "ori(_totalSupply) >= ori(Sum(_balances[...]))",
            "ori(_totalSupply) <= ori(Sum(_balances[...]))",
            "ori(_pendingowner) != ori(_owner)",
            "ori(Sum(_balances[...])) >= ori(Sum(_locked_balances[...]))",
            "ori(Sum(_balances[...])) > ori(Sum(_locked_balances[...]))",
            "ori(Sum(_balances[...])) != ori(Sum(_locked_balances[...]))"
        ],
        "postconditions": [
            "_decimals > 0",
            "_decimals == 18",
            "_decimals one of [18]",
            "Sum(_locked_balances[...]) == 0",
            "Sum(_locked_balances[...]) one of [0]",
            "_pendingowner == 0",
            "Sum(_balances[...]) > 0",
            "Sum(_balances[...]) == 3000000000000000000000000000",
            "Sum(_balances[...]) one of [3000000000000000000000000000]",
            "elem of _balances[...] is one of [3000000000000000000000000000]",
            "paused == false",
            "_owner != 0",
            "elem of _locked_balances[...] is one of [0]",
            "elem of _locked_balances[...] is one of []",
            "_totalSupply > 0",
            "_totalSupply == 3000000000000000000000000000",
            "_totalSupply one of [3000000000000000000000000000]",
            "_decimals == ori(_decimals)",
            "_decimals >= ori(_decimals)",
            "_decimals <= ori(_decimals)",
            "ori(_totalSupply) == Sum(_balances[...])",
            "ori(_totalSupply) >= Sum(_balances[...])",
            "ori(_totalSupply) <= Sum(_balances[...])",
            "ori(_totalSupply) == _totalSupply",
            "ori(_totalSupply) >= _totalSupply",
            "ori(_totalSupply) <= _totalSupply",
            "Sum(_locked_balances[...]) <= ori(Sum(_balances[...]))",
            "Sum(_locked_balances[...]) < ori(Sum(_balances[...]))",
            "Sum(_locked_balances[...]) != ori(Sum(_balances[...]))",
            "Sum(_locked_balances[...]) <= Sum(_balances[...])",
            "Sum(_locked_balances[...]) < Sum(_balances[...])",
            "Sum(_locked_balances[...]) != Sum(_balances[...])",
            "Sum(_locked_balances[...]) == ori(Sum(_locked_balances[...]))",
            "Sum(_locked_balances[...]) >= ori(Sum(_locked_balances[...]))",
            "Sum(_locked_balances[...]) <= ori(Sum(_locked_balances[...]))",
            "ori(_pendingowner) == _pendingowner",
            "ori(_pendingowner) != _owner",
            "ori(paused) == paused",
            "_pendingowner != ori(_owner)",
            "_pendingowner != _owner",
            "ori(_owner) == _owner",
            "ori(Sum(_balances[...])) == Sum(_balances[...])",
            "ori(Sum(_balances[...])) >= Sum(_balances[...])",
            "ori(Sum(_balances[...])) <= Sum(_balances[...])",
            "ori(Sum(_balances[...])) == _totalSupply",
            "ori(Sum(_balances[...])) >= _totalSupply",
            "ori(Sum(_balances[...])) <= _totalSupply",
            "Sum(_balances[...]) >= ori(Sum(_locked_balances[...]))",
            "Sum(_balances[...]) > ori(Sum(_locked_balances[...]))",
            "Sum(_balances[...]) != ori(Sum(_locked_balances[...]))",
            "Sum(_balances[...]) == _totalSupply",
            "Sum(_balances[...]) >= _totalSupply",
            "Sum(_balances[...]) <= _totalSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]