[
    {
        "func": "claimRewards(to)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "to != 0",
            "ori(_owner) != 0",
            "ori(Sum(stakingTokenBalances[...])) one of [0,34096228314324528727231,33848670899479698583312,32993275541765310001160,36803843460389314630227,34831321845930064665135,16881022058507694895546,42241978667207346219686,22022436838116118268010,36904994228042706821241]",
            "msg.value == 0",
            "msg.value one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(veToken) != 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(stakingTokenSupply) one of [0,34096228314324528727231,33848670899479698583312,32993275541765310001160,36803843460389314630227,34831321845930064665135,16881022058507694895546,42241978667207346219686,22022436838116118268010,36904994228042706821241]"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [0]",
            "Sum(stakingTokenBalances[...]) one of [0,34096228314324528727231,33848670899479698583312,32993275541765310001160,36803843460389314630227,34831321845930064665135,16881022058507694895546,42241978667207346219686,22022436838116118268010,36904994228042706821241]",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "stakingTokenSupply one of [0,34096228314324528727231,33848670899479698583312,32993275541765310001160,36803843460389314630227,34831321845930064665135,16881022058507694895546,42241978667207346219686,22022436838116118268010,36904994228042706821241]",
            "tokenManager != 0",
            "pause == ori(pause)",
            "ori(_owner) == _owner",
            "ori(Sum(stakingTokenBalances[...])) == Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator == ori(operator)",
            "veToken == ori(veToken)",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager",
            "ori(stakingTokenSupply) == stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) <= stakingTokenSupply"
        ],
        "falsified_preconditions": [
            "ori(Sum(stakingTokenBalances[...])) == 0",
            "ori(stakingTokenSupply) == 0"
        ],
        "falsified_postconditions": [
            "Sum(stakingTokenBalances[...]) == 0",
            "stakingTokenSupply == 0"
        ]
    },
    {
        "func": "claimRewards(to)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "notifyTransfer(token,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "notifyTransfer(token,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setEmissionManager(_emissionManager)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setEmissionManager(_emissionManager)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setPause(_pause)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setPause(_pause)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setTokenManager(_tokenManager)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setTokenManager(_tokenManager)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setVeToken(_veToken)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "_veToken != 0",
            "ori(_owner) != 0",
            "ori(Sum(stakingTokenBalances[...])) == 0",
            "ori(Sum(stakingTokenBalances[...])) one of [0]",
            "msg.value == 0",
            "msg.value one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(veToken) == 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(stakingTokenSupply) == 0",
            "ori(stakingTokenSupply) one of [0]",
            "_veToken != ori(veToken)"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [0]",
            "elem of stakingTokenBalances[...] is one of []",
            "Sum(stakingTokenBalances[...]) == 0",
            "Sum(stakingTokenBalances[...]) one of [0]",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "stakingTokenSupply == 0",
            "stakingTokenSupply one of [0]",
            "tokenManager != 0",
            "pause == ori(pause)",
            "_veToken == veToken",
            "ori(_owner) == _owner",
            "ori(Sum(stakingTokenBalances[...])) == Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator == ori(operator)",
            "veToken != ori(veToken)",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager",
            "ori(stakingTokenSupply) == stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) <= stakingTokenSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "setVeToken(_veToken)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "stake(to,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "to != 0",
            "ori(_owner) != 0",
            "amount > 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(veToken) != 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(Sum(stakingTokenBalances[...])) == ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) >= ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) <= ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) >= ori(stakingTokenBalances[to])",
            "ori(stakingTokenSupply) >= ori(stakingTokenBalances[to])"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [40813305376613802348766]",
            "Sum(stakingTokenBalances[...]) > 0",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingTokenBalances[to] > 0",
            "stakingToken != 0",
            "stakingTokenSupply > 0",
            "tokenManager != 0",
            "pause == ori(pause)",
            "ori(_owner) == _owner",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) < Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) != Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) != stakingTokenBalances[to]",
            "ori(Sum(stakingTokenBalances[...])) <= stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) < stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) != stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= stakingTokenBalances[to]",
            "Sum(stakingTokenBalances[...]) >= ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) > ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) != ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) == stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) <= stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= ori(stakingTokenBalances[to])",
            "Sum(stakingTokenBalances[...]) > ori(stakingTokenBalances[to])",
            "Sum(stakingTokenBalances[...]) != ori(stakingTokenBalances[to])",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator == ori(operator)",
            "veToken == ori(veToken)",
            "stakingTokenBalances[to] != ori(stakingTokenSupply)",
            "stakingTokenBalances[to] <= stakingTokenSupply",
            "stakingTokenBalances[to] >= ori(stakingTokenBalances[to])",
            "stakingTokenBalances[to] > ori(stakingTokenBalances[to])",
            "stakingTokenBalances[to] != ori(stakingTokenBalances[to])",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager",
            "ori(stakingTokenSupply) <= stakingTokenSupply",
            "ori(stakingTokenSupply) < stakingTokenSupply",
            "ori(stakingTokenSupply) != stakingTokenSupply",
            "stakingTokenSupply >= ori(stakingTokenBalances[to])",
            "stakingTokenSupply > ori(stakingTokenBalances[to])",
            "stakingTokenSupply != ori(stakingTokenBalances[to])"
        ],
        "falsified_preconditions": [
            "ori(stakingTokenBalances[to]) == 0"
        ],
        "falsified_postconditions": []
    },
    {
        "func": "stake(to,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOperator(newOperator)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_owner) != 0",
            "ori(Sum(stakingTokenBalances[...])) == 0",
            "ori(Sum(stakingTokenBalances[...])) one of [0]",
            "msg.value == 0",
            "msg.value one of [0]",
            "ori(stakingTokenSupply) == 0",
            "ori(stakingTokenSupply) one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(veToken) != 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "newOperator != 0",
            "ori(operator) != newOperator"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [0]",
            "elem of stakingTokenBalances[...] is one of []",
            "Sum(stakingTokenBalances[...]) == 0",
            "Sum(stakingTokenBalances[...]) one of [0]",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "stakingTokenSupply == 0",
            "stakingTokenSupply one of [0]",
            "tokenManager != 0",
            "pause == ori(pause)",
            "ori(_owner) == _owner",
            "ori(Sum(stakingTokenBalances[...])) == Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "ori(stakingTokenSupply) == stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) <= stakingTokenSupply",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator != ori(operator)",
            "operator == newOperator",
            "veToken == ori(veToken)",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOperator(newOperator)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_owner) != 0",
            "ori(Sum(stakingTokenBalances[...])) == 0",
            "ori(Sum(stakingTokenBalances[...])) one of [0]",
            "msg.value == 0",
            "msg.value one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(veToken) != 0",
            "newOwner != 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(stakingTokenSupply) == 0",
            "ori(stakingTokenSupply) one of [0]",
            "ori(_owner) != newOwner"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [0]",
            "elem of stakingTokenBalances[...] is one of []",
            "Sum(stakingTokenBalances[...]) == 0",
            "Sum(stakingTokenBalances[...]) one of [0]",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "stakingTokenSupply == 0",
            "stakingTokenSupply one of [0]",
            "tokenManager != 0",
            "pause == ori(pause)",
            "ori(_owner) != _owner",
            "ori(Sum(stakingTokenBalances[...])) == Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "_owner == newOwner",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator == ori(operator)",
            "veToken == ori(veToken)",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager",
            "ori(stakingTokenSupply) == stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) <= stakingTokenSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "updateAccruals(owner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "updateAccruals(owner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "withdraw(to,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "to != 0",
            "ori(_owner) != 0",
            "ori(Sum(stakingTokenBalances[...])) > 0",
            "amount > 0",
            "msg.value == 0",
            "msg.value one of [0]",
            "msg.sender != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(stakingTokenBalances[msg.sender]) > 0",
            "ori(veToken) != 0",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(stakingTokenSupply) > 0",
            "ori(Sum(stakingTokenBalances[...])) >= ori(stakingTokenBalances[msg.sender])",
            "ori(Sum(stakingTokenBalances[...])) > ori(stakingTokenBalances[msg.sender])",
            "ori(Sum(stakingTokenBalances[...])) != ori(stakingTokenBalances[msg.sender])",
            "ori(Sum(stakingTokenBalances[...])) == ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) >= ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) <= ori(stakingTokenSupply)",
            "ori(stakingTokenBalances[msg.sender]) <= ori(stakingTokenSupply)",
            "ori(stakingTokenBalances[msg.sender]) < ori(stakingTokenSupply)",
            "ori(stakingTokenBalances[msg.sender]) != ori(stakingTokenSupply)"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [36635278960389313627953]",
            "Sum(stakingTokenBalances[...]) > 0",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "stakingTokenBalances[msg.sender] == 0",
            "stakingTokenBalances[msg.sender] one of [0]",
            "stakingTokenSupply > 0",
            "tokenManager != 0",
            "pause == ori(pause)",
            "ori(_owner) == _owner",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) > Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) != Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= stakingTokenBalances[msg.sender]",
            "ori(Sum(stakingTokenBalances[...])) > stakingTokenBalances[msg.sender]",
            "ori(Sum(stakingTokenBalances[...])) != stakingTokenBalances[msg.sender]",
            "ori(Sum(stakingTokenBalances[...])) >= stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) > stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) != stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= ori(stakingTokenBalances[msg.sender])",
            "Sum(stakingTokenBalances[...]) > ori(stakingTokenBalances[msg.sender])",
            "Sum(stakingTokenBalances[...]) != ori(stakingTokenBalances[msg.sender])",
            "Sum(stakingTokenBalances[...]) >= stakingTokenBalances[msg.sender]",
            "Sum(stakingTokenBalances[...]) > stakingTokenBalances[msg.sender]",
            "Sum(stakingTokenBalances[...]) != stakingTokenBalances[msg.sender]",
            "Sum(stakingTokenBalances[...]) <= ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) < ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) != ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) == stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) <= stakingTokenSupply",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "operator == ori(operator)",
            "veToken == ori(veToken)",
            "ori(stakingTokenBalances[msg.sender]) >= stakingTokenBalances[msg.sender]",
            "ori(stakingTokenBalances[msg.sender]) > stakingTokenBalances[msg.sender]",
            "ori(stakingTokenBalances[msg.sender]) != stakingTokenBalances[msg.sender]",
            "ori(stakingTokenBalances[msg.sender]) <= stakingTokenSupply",
            "ori(stakingTokenBalances[msg.sender]) < stakingTokenSupply",
            "ori(stakingTokenBalances[msg.sender]) != stakingTokenSupply",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager",
            "stakingTokenBalances[msg.sender] <= ori(stakingTokenSupply)",
            "stakingTokenBalances[msg.sender] < ori(stakingTokenSupply)",
            "stakingTokenBalances[msg.sender] != ori(stakingTokenSupply)",
            "stakingTokenBalances[msg.sender] <= stakingTokenSupply",
            "stakingTokenBalances[msg.sender] < stakingTokenSupply",
            "stakingTokenBalances[msg.sender] != stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) > stakingTokenSupply",
            "ori(stakingTokenSupply) != stakingTokenSupply"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "withdraw(to,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "ori(_owner) != 0",
            "ori(pause) == false",
            "ori(emissionManager) != 0",
            "ori(_status) > 0",
            "ori(_status) == 1",
            "ori(_status) one of [1]",
            "ori(stakingToken) != 0",
            "ori(tokenManager) != 0",
            "ori(operator) != 0",
            "ori(Sum(stakingTokenBalances[...])) == ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) >= ori(stakingTokenSupply)",
            "ori(Sum(stakingTokenBalances[...])) <= ori(stakingTokenSupply)"
        ],
        "postconditions": [
            "pause == false",
            "elem of stakingTokenBalances[...] is one of [0]",
            "_owner != 0",
            "_status > 0",
            "_status == 1",
            "_status one of [1]",
            "operator != 0",
            "emissionManager != 0",
            "veToken != 0",
            "stakingToken != 0",
            "tokenManager != 0",
            "pause == ori(pause)",
            "Sum(stakingTokenBalances[...]) == stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) >= stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) <= stakingTokenSupply",
            "ori(emissionManager) == emissionManager",
            "_status == ori(_status)",
            "_status >= ori(_status)",
            "_status <= ori(_status)",
            "ori(stakingToken) == stakingToken",
            "ori(tokenManager) == tokenManager"
        ],
        "falsified_preconditions": [
            "ori(Sum(stakingTokenBalances[...])) == 0",
            "ori(stakingTokenSupply) == 0"
        ],
        "falsified_postconditions": [
            "Sum(stakingTokenBalances[...]) == 0",
            "stakingTokenSupply == 0",
            "ori(Sum(stakingTokenBalances[...])) == Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) >= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) <= Sum(stakingTokenBalances[...])",
            "ori(Sum(stakingTokenBalances[...])) == stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) >= stakingTokenSupply",
            "ori(Sum(stakingTokenBalances[...])) <= stakingTokenSupply",
            "Sum(stakingTokenBalances[...]) == ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) >= ori(stakingTokenSupply)",
            "Sum(stakingTokenBalances[...]) <= ori(stakingTokenSupply)",
            "ori(stakingTokenSupply) == stakingTokenSupply",
            "ori(stakingTokenSupply) >= stakingTokenSupply",
            "ori(stakingTokenSupply) <= stakingTokenSupply"
        ]
    }
]