There are several invariants that can be inserted into the smart contract code provided. Here are the invariants associated with the specified line numbers:

23+ assert(underlyingLookup[underlying].eTokenAddress == newConfig.eTokenAddress);

30+ assert(eTokenAddr != address(0));

48+ assert(eTokenAddr != address(0));

66+ assert(eTokenAddr != address(0));

80+ assert(eTokenAddr != address(0));

110+ assert(eTokenAddr != address(0));
        assert(chainlinkAggregator != address(0));

These invariants help ensure that the required conditions are met before executing the specified functions within the smart contract.