Since there are no specific lines in the provided code where invariants should be inserted, it is important to focus on ensuring the proper execution and security of the transferOwnership function in the ERC-173 Contract Ownership Standard interface.

Here are some possible invariants that can be added to enhance the security and integrity of the contract:

1. 10+ require(_newOwner != address(0), "New owner address cannot be zero address");
   This invariant ensures that the new owner address provided in the transferOwnership function is not the zero address, preventing accidental renunciation of ownership.

2. 10+ require(msg.sender == owner(), "Only the current owner can transfer ownership");
   This invariant ensures that only the current owner of the contract can call the transferOwnership function, maintaining proper access control.

By incorporating these invariants into the transferOwnership function, the contract can establish and enforce necessary rules and conditions to safeguard against unauthorized ownership changes and maintain the integrity of the contract.